% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FVCOMPhysics.R
\name{FVCOM_Physics}
\alias{FVCOM_Physics}
\title{A class for navigating  FVCOM datasets}
\description{
R6 base class suitable for inheritance by other classes
}
\seealso{
\code{\link{plot_mesh}} and \code{\link{plot_mesh_geometry}}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{filename}}{character, path or URL}

\item{\code{NC}}{ncdf4 object}

\item{\code{M}}{sf table of mesh}

\item{\code{t0}}{POSIXct timestamp identifying the start time}

\item{\code{verbose}}{logical for helpful messaging}

\item{\code{zvar}}{character, the variable to use as 'z' such as siglev or siglay}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{open_bounds}}{provides the indices for open boundary elements (open water)}

\item{\code{closed_bounds}}{provides the indices for closed boundary elements (shore)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FVCOM_Physics-new}{\code{FVCOM_Physics$new()}}
\item \href{#method-FVCOM_Physics-print}{\code{FVCOM_Physics$print()}}
\item \href{#method-FVCOM_Physics-get_crs}{\code{FVCOM_Physics$get_crs()}}
\item \href{#method-FVCOM_Physics-get_time}{\code{FVCOM_Physics$get_time()}}
\item \href{#method-FVCOM_Physics-random_points}{\code{FVCOM_Physics$random_points()}}
\item \href{#method-FVCOM_Physics-char_size}{\code{FVCOM_Physics$char_size()}}
\item \href{#method-FVCOM_Physics-mesh_metrics}{\code{FVCOM_Physics$mesh_metrics()}}
\item \href{#method-FVCOM_Physics-mesh_depth}{\code{FVCOM_Physics$mesh_depth()}}
\item \href{#method-FVCOM_Physics-append_bounds}{\code{FVCOM_Physics$append_bounds()}}
\item \href{#method-FVCOM_Physics-plot}{\code{FVCOM_Physics$plot()}}
\item \href{#method-FVCOM_Physics-clone}{\code{FVCOM_Physics$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-new"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$new(
  filename,
  origin = as.POSIXct("1858-11-17 00:00:00", tz = "UTC"),
  verbose = FALSE,
  zvar = c("siglev", "siglay")[1]
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{character either a filename or OpenDAP URL}

\item{\code{origin}}{POSIXct timestamp indicating the start of the experiment}

\item{\code{verbose}}{logical for helpful messaging}

\item{\code{zvar}}{character, the variable to use as 'z' such as siglev or siglay}

\item{\code{crs}}{}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-print"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-print}{}}}
\subsection{Method \code{print()}}{
Pretty print
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-get_crs"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-get_crs}{}}}
\subsection{Method \code{get_crs()}}{
Retrieve the CRS
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$get_crs(form = c("proj", "wkt")[1])}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{form}}{character, one of 'proj', 'wkt'}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
CRS in the specified form
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-get_time"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-get_time}{}}}
\subsection{Method \code{get_time()}}{
retrieve the time relative to some epoch/origin
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$get_time(origin = self$t0, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{origin}}{POSIXct the orogin of relative timestamps}

\item{\code{...}}{other arguments for \code{\link[fvcom]{fvcom_time}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-random_points"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-random_points}{}}}
\subsection{Method \code{random_points()}}{
Retriev one or more random points
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$random_points(
  n = 1,
  select_time = c("first", "last", "random")[1],
  select_z = c("random", "surface", "bottom")[1]
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{numeric, the number of points to generate}

\item{\code{select_time}}{character, one of 'first' (default), 'last' or 'random'}

\item{\code{select_z}}{numeric or character.  If character then 'random' (default), 'surface', 'bottom'.
If numeric then you specify your own in \code{zvar} units}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
sf object of class POINT
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-char_size"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-char_size}{}}}
\subsection{Method \code{char_size()}}{
find proxy for characteristic size based upon element size

NOTE if we update GEOS we could get size of inscribed circle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$char_size(what = c("min", "max", "square", "circle")[4])}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{what}}{character
\itemize{
\item min or square - side length of sqaure with equivalent area
\item max - side of square with double the area (or 1.4*sqrt(area))
\item circle - radius of circle with equivalent area
 }}

\item{\code{x}}{element mesh as sf}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
numeric characteristic size
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-mesh_metrics"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-mesh_metrics}{}}}
\subsection{Method \code{mesh_metrics()}}{
generate kinematics metrics for a given mesh
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$mesh_metrics(
  ofile = c(NA, file.path(dirname(self$filename), "mesh-elem-metrics.csv.gz"))[1]
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ofile}}{optional file to save to (as non-spatial CSV) or NA/NULL to skip}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
mesh (invisibly) with variables added including
\itemize{
\item max_u, max_v, max_w maximum velocity by element over all sigma in m/s
\item area element area in m^2
\item char_dim characteristic dimension, for now the radius of the circle with equivalent area in m
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-mesh_depth"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-mesh_depth}{}}}
\subsection{Method \code{mesh_depth()}}{
Compute the mean depth of each mesh element
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$mesh_depth()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
mesh (invisibly) with depth added
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-append_bounds"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-append_bounds}{}}}
\subsection{Method \code{append_bounds()}}{
append the boundary info to the mesh table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$append_bounds()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
mesh invisibly with appended boundary variable where
\itemize{
 \item{open indicates the element is boundaed on at least one side by open water}
 \item{closed indicates the element is bounded on at least one side by shoreline}
 \item{internal indicates the element is not on the boundary}
 \item{unknown self-explanatory}
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-plot"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-plot}{}}}
\subsection{Method \code{plot()}}{
Plot element mesh
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$plot(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{other arguments for \code{\link[sf]{plot}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FVCOM_Physics-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FVCOM_Physics-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FVCOM_Physics$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
